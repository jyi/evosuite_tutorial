/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 24 09:29:07 GMT 2016
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node<Object> node0 = new Node<Object>((Object) "");
      node0.setNext((Node<Object>) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Node<Object> node0 = new Node<Object>((Object) "");
      String string0 = (String)node0.getObject();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      Node<Object> node0 = new Node<Object>(object0);
      node0.setNext(node0);
      Node<Object> node1 = node0.getNext();
      assertSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Node<Object> node0 = new Node<Object>((Object) null);
      Object object0 = node0.getObject();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Node<Object> node0 = new Node<Object>((Object) null);
      Node<Object> node1 = node0.getNext();
      assertNull(node1);
  }
}
